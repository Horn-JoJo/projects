### 数据库表创建
- 创建用户表:
```SQL[]
CREATE TABLE "USER" (name text, sex	text, id text, psw text);
```
- 创建单词表: 
```SQL[]
CREATE TABLE dictionary(word text, explain text);
```
- 创建历史记录表:
```SQL[]
CREATE TABLE log(ip text, id text, logtime text, history text);
```
项目操作流程：
	提前已经通过import 将单词表导入已经创建好的数据库server.db中
	客户端:输入服务IP+端口 
	服务器:输入指定IP+端口

### 
基本功能实现:
	客户端
	1,登陆从数据库验证，有就进入服务菜单：查找单词,并显示到屏幕 查看用户(id)历史记录 退出登陆到离线菜单
	2,注册用户
	3,退出客户端程序
	服务器
	1,实现并发服务器
	2,实现地址重用
	3,实现对数据库的查询插入等操作
	4,实现数据收发

功能不足之处:
1 对于输入的菜单,输入指令错误时，未能较好解决该问题(一般错误会报提示指令错误信息，有时指令不正确还是会显示无关内容)
2 注册信息时未作规范验证处理（只要查库没有该id就能够注册成功）
3 对于错误处理比较混乱
4 数据缓冲区buf的大小问题。随着数据量的增加会有装不下的问题，导致发送给客户端的数据显示不全的问题
4 服务器端未封装函数，代码不易读，原因写代码前未搭建一个服务端的框架
5 对于项目的文件分配与管理不是很好

项目进展不足之处:
未花一定时间分析项目流程，并写出框架
写代码一次写很多，运行调试耗时
为先考虑封装，导致后序在次按模块封装时,困难重重。
代码冗余，频繁的一些重复操作。
错误处理出口多，不易检查。

尚未完成目标
2,添加输入规范性验证（登陆 注册）
3,处理错误函数回收资源问题
4,封装服务端函数
5,尝试加入IO多路复用，实现服务器端清屏操作，以及导单词表到库操作
7,尝试写头文件，以及功能文件，将其与主文件分开。
8,makefile文件可以在写成通用的。
